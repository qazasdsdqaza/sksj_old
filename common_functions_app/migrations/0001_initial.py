# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2021-11-19 17:43
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CN_seller_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('USER_ID', models.IntegerField(default=0, verbose_name='用户id')),
                ('username', models.CharField(default='', max_length=30, verbose_name='用户名')),
                ('CN_user_id', models.CharField(max_length=30, null=True, verbose_name='卖家ID')),
                ('CN_seller_name', models.CharField(max_length=50, null=True, verbose_name='卖家备注名')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='Data_TopData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lots_id', models.CharField(max_length=40, null=True, verbose_name='标准搜索ID')),
                ('product_parent_id', models.IntegerField(null=True, verbose_name='产品父ID')),
                ('standard_product_id', models.IntegerField(null=True, verbose_name='产品标准ID')),
                ('user_id', models.IntegerField(null=True, verbose_name='用户ID')),
                ('buyer_id', models.IntegerField(null=True, verbose_name='买家ID')),
                ('default_variation_id', models.IntegerField(null=True, verbose_name='缺省变种ID')),
                ('title', models.TextField(null=True, verbose_name='产品标题')),
                ('taxonomy_values_0', models.CharField(max_length=40, null=True, verbose_name='产品分类0')),
                ('taxonomy_values_1', models.CharField(max_length=40, null=True, verbose_name='产品分类1')),
                ('taxonomy_values_2', models.CharField(max_length=40, null=True, verbose_name='产品分类2')),
                ('taxonomy_values_3', models.CharField(max_length=40, null=True, verbose_name='产品分类3')),
                ('facets', models.TextField(null=True, verbose_name='产品详细参数')),
                ('description', models.TextField(null=True, verbose_name='产品描述')),
                ('image_urls_0', models.URLField(null=True, verbose_name='产品详细图片0')),
                ('image_urls_1', models.URLField(null=True, verbose_name='产品详细图片1')),
                ('image_urls_2', models.URLField(null=True, verbose_name='产品详细图片2')),
                ('image_urls_3', models.URLField(null=True, verbose_name='产品详细图片3')),
                ('image_urls_4', models.URLField(null=True, verbose_name='产品详细图片4')),
                ('image_urls_5', models.URLField(null=True, verbose_name='产品详细图片5')),
                ('buy_now_price', models.CharField(max_length=10, null=True, verbose_name='一口价')),
                ('retail_price', models.CharField(max_length=10, null=True, verbose_name='零售价')),
                ('starting_bid_amount', models.IntegerField(null=True, verbose_name='起拍价')),
                ('hammer_price_local', models.FloatField(null=True, verbose_name='本地成交价')),
                ('shipping_price_local', models.FloatField(null=True, verbose_name='本地运费')),
                ('alerts_count', models.IntegerField(null=True, verbose_name='通告次数')),
                ('seller_name', models.CharField(max_length=50, null=True, verbose_name='卖家姓名')),
                ('ratings_count', models.FloatField(null=True, verbose_name='评价数量')),
                ('ratings_average', models.FloatField(null=True, verbose_name='平均评分')),
                ('lot_upsells', models.TextField(null=True, verbose_name='更多销售')),
                ('bidding_started_at_data', models.DateTimeField(null=True, verbose_name='产品起拍日期')),
                ('activated_at_data', models.DateTimeField(null=True, verbose_name='产品激活日期')),
                ('total_orders', models.IntegerField(null=True, verbose_name='总展示数量')),
                ('valid_orders', models.IntegerField(null=True, verbose_name='成交订单数量')),
                ('bid_orders', models.IntegerField(null=True, verbose_name='竞拍价订单')),
                ('buy_now_orders', models.IntegerField(null=True, verbose_name='一口价订单')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='Data_TopData_month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lots_id', models.CharField(max_length=40, null=True, verbose_name='标准搜索ID')),
                ('product_parent_id', models.IntegerField(null=True, verbose_name='产品父ID')),
                ('standard_product_id', models.IntegerField(null=True, verbose_name='产品标准ID')),
                ('user_id', models.IntegerField(null=True, verbose_name='用户ID')),
                ('buyer_id', models.IntegerField(null=True, verbose_name='买家ID')),
                ('default_variation_id', models.IntegerField(null=True, verbose_name='缺省变种ID')),
                ('title', models.TextField(null=True, verbose_name='产品标题')),
                ('taxonomy_values_0', models.CharField(max_length=40, null=True, verbose_name='产品分类0')),
                ('taxonomy_values_1', models.CharField(max_length=40, null=True, verbose_name='产品分类1')),
                ('taxonomy_values_2', models.CharField(max_length=40, null=True, verbose_name='产品分类2')),
                ('taxonomy_values_3', models.CharField(max_length=40, null=True, verbose_name='产品分类3')),
                ('facets', models.TextField(null=True, verbose_name='产品详细参数')),
                ('description', models.TextField(null=True, verbose_name='产品描述')),
                ('image_urls_0', models.URLField(null=True, verbose_name='产品详细图片0')),
                ('image_urls_1', models.URLField(null=True, verbose_name='产品详细图片1')),
                ('image_urls_2', models.URLField(null=True, verbose_name='产品详细图片2')),
                ('image_urls_3', models.URLField(null=True, verbose_name='产品详细图片3')),
                ('image_urls_4', models.URLField(null=True, verbose_name='产品详细图片4')),
                ('image_urls_5', models.URLField(null=True, verbose_name='产品详细图片5')),
                ('buy_now_price', models.CharField(max_length=10, null=True, verbose_name='一口价')),
                ('retail_price', models.CharField(max_length=10, null=True, verbose_name='零售价')),
                ('starting_bid_amount', models.IntegerField(null=True, verbose_name='起拍价')),
                ('hammer_price_local', models.FloatField(null=True, verbose_name='本地成交价')),
                ('shipping_price_local', models.FloatField(null=True, verbose_name='本地运费')),
                ('alerts_count', models.IntegerField(null=True, verbose_name='通告次数')),
                ('seller_name', models.CharField(max_length=50, null=True, verbose_name='卖家姓名')),
                ('ratings_count', models.FloatField(null=True, verbose_name='评价数量')),
                ('ratings_average', models.FloatField(null=True, verbose_name='平均评分')),
                ('lot_upsells', models.TextField(null=True, verbose_name='更多销售')),
                ('bidding_started_at_data', models.DateTimeField(null=True, verbose_name='产品起拍日期')),
                ('activated_at_data', models.DateTimeField(null=True, verbose_name='产品激活日期')),
                ('total_orders', models.IntegerField(null=True, verbose_name='总展示数量')),
                ('valid_orders', models.IntegerField(null=True, verbose_name='成交订单数量')),
                ('bid_oders', models.IntegerField(null=True, verbose_name='竞拍价订单')),
                ('buy_now_oders', models.IntegerField(null=True, verbose_name='一口价订单')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='own_product_edit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('USER_ID', models.IntegerField(default=0, verbose_name='用户id')),
                ('username', models.CharField(default='', max_length=30, verbose_name='用户名')),
                ('own_all_standard_product_id', models.CharField(max_length=30, null=True, verbose_name='商品标准ID')),
                ('own_all_product_name', models.CharField(max_length=100, null=True, verbose_name='备注商品名称')),
                ('own_all_product_taxonomy', models.CharField(max_length=100, null=True, verbose_name='备注商品品类')),
                ('own_all_product_price', models.CharField(max_length=50, null=True, verbose_name='备注商品进价')),
                ('own_all_product_weight', models.CharField(max_length=50, null=True, verbose_name='备注商品重量')),
                ('own_all_product_1688addrass', models.CharField(max_length=500, null=True, verbose_name='备注商品1688地址')),
                ('own_all_product_ave_sfb', models.CharField(max_length=50, null=True, verbose_name='备注商品均SFB')),
                ('own_all_product_beizhu', models.CharField(max_length=1000, null=True, verbose_name='备注商品详细信息')),
                ('own_all_product_colloct', models.CharField(max_length=10, null=True, verbose_name='收藏商品')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='Table_Product_TOP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STAR_DATE', models.DateField(null=True, unique=True, verbose_name='日期')),
                ('TIME_KEY', models.CharField(max_length=200, null=True, verbose_name='时间标志')),
                ('standard_product_id', models.CharField(max_length=200, null=True, verbose_name='商品ID')),
                ('image_urls_0', models.CharField(max_length=200, null=True, verbose_name='商品主图')),
                ('product_sum', models.CharField(max_length=200, null=True, verbose_name='总数量')),
                ('avg_amount', models.CharField(max_length=200, null=True, verbose_name='均成交价')),
                ('seller_number', models.CharField(max_length=200, null=True, verbose_name='商品种类数量')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='更新数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='Table_Sales_amounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STAR_DATE', models.DateField(null=True, unique=True, verbose_name='日期')),
                ('product_sum', models.CharField(max_length=200, null=True, verbose_name='总数量')),
                ('bid_oders', models.CharField(max_length=200, null=True, verbose_name='拍卖价数量')),
                ('buy_now_oders', models.CharField(max_length=200, null=True, verbose_name='一口价数量')),
                ('avg_amount', models.CharField(max_length=200, null=True, verbose_name='平均成交价')),
                ('bid_avg_amount', models.CharField(max_length=200, null=True, verbose_name='拍卖价平均成交价')),
                ('buy_now_avg_amount', models.CharField(max_length=200, null=True, verbose_name='一口价平均成交价')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='Table_Seller_TOP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STAR_DATE', models.DateField(null=True, unique=True, verbose_name='日期')),
                ('TIME_KEY', models.CharField(max_length=200, null=True, verbose_name='时间标志')),
                ('seller_name', models.CharField(max_length=200, null=True, verbose_name='卖家名字')),
                ('user_id', models.CharField(max_length=200, null=True, verbose_name='卖家ID')),
                ('product_sum', models.CharField(max_length=200, null=True, verbose_name='总数量')),
                ('avg_amount', models.CharField(max_length=200, null=True, verbose_name='均成交价')),
                ('product_number', models.CharField(max_length=200, null=True, verbose_name='商品种类数量')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='The_taxonomy_amount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STAR_DATE', models.DateField(null=True, unique=True, verbose_name='保存开始日期')),
                ('time_range', models.CharField(max_length=200, null=True, verbose_name='统计时间段标志')),
                ('taxonomy_values', models.CharField(max_length=200, null=True, verbose_name='品类')),
                ('product_sum', models.CharField(max_length=200, null=True, verbose_name='总数量')),
                ('bid_oders', models.CharField(max_length=200, null=True, verbose_name='拍卖价数量')),
                ('buy_now_oders', models.CharField(max_length=200, null=True, verbose_name='一口价数量')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
            ],
        ),
        migrations.CreateModel(
            name='TopData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_id', models.CharField(max_length=40, null=True, unique=True, verbose_name='搜索ID')),
                ('lots_id', models.CharField(max_length=40, null=True, verbose_name='标准搜索ID')),
                ('product_parent_id', models.IntegerField(null=True, verbose_name='产品父ID')),
                ('standard_product_id', models.IntegerField(null=True, verbose_name='产品标准ID')),
                ('user_id', models.IntegerField(null=True, verbose_name='用户ID')),
                ('buyer_id', models.IntegerField(null=True, verbose_name='买家ID')),
                ('default_variation_id', models.IntegerField(null=True, verbose_name='缺省变种ID')),
                ('title', models.TextField(null=True, verbose_name='产品标题')),
                ('taxonomy_values_0', models.CharField(max_length=40, null=True, verbose_name='产品分类0')),
                ('taxonomy_values_1', models.CharField(max_length=40, null=True, verbose_name='产品分类1')),
                ('taxonomy_values_2', models.CharField(max_length=40, null=True, verbose_name='产品分类2')),
                ('taxonomy_values_3', models.CharField(max_length=40, null=True, verbose_name='产品分类3')),
                ('facets', models.TextField(null=True, verbose_name='产品详细参数')),
                ('description', models.TextField(null=True, verbose_name='产品描述')),
                ('new_guarantee', models.TextField(null=True, verbose_name='销售担保')),
                ('image_urls_0', models.URLField(null=True, verbose_name='产品详细图片0')),
                ('image_urls_1', models.URLField(null=True, verbose_name='产品详细图片1')),
                ('image_urls_2', models.URLField(null=True, verbose_name='产品详细图片2')),
                ('image_urls_3', models.URLField(null=True, verbose_name='产品详细图片3')),
                ('image_urls_4', models.URLField(null=True, verbose_name='产品详细图片4')),
                ('image_urls_5', models.URLField(null=True, verbose_name='产品详细图片5')),
                ('main_image_width', models.IntegerField(null=True, verbose_name='头像图片宽度')),
                ('main_image_height', models.IntegerField(null=True, verbose_name='头像图片长度')),
                ('main_image', models.URLField(null=True, verbose_name='头像图片')),
                ('currency', models.CharField(max_length=10, null=True, verbose_name='货币')),
                ('buy_now_price', models.CharField(max_length=10, null=True, verbose_name='一口价')),
                ('buy_now_price_local', models.IntegerField(null=True, verbose_name='当地一口价')),
                ('buy_now_price_with_symbol', models.CharField(max_length=10, null=True, verbose_name='一口价标志')),
                ('retail_price', models.CharField(max_length=10, null=True, verbose_name='零售价')),
                ('retail_price_local', models.FloatField(null=True, verbose_name='当地零售价')),
                ('retail_price_with_symbol', models.CharField(max_length=10, null=True, verbose_name='零售价标志')),
                ('retail_price_with_partial_symbol', models.CharField(max_length=10, null=True, verbose_name='当地零售价标志')),
                ('buy_now_discount', models.FloatField(null=True, verbose_name='一口价折扣')),
                ('starting_bid_amount', models.IntegerField(null=True, verbose_name='起拍数量')),
                ('starting_bid_amount_local', models.IntegerField(null=True, verbose_name='当地起拍数量')),
                ('starting_bid_amount_with_symbol', models.CharField(max_length=10, null=True, verbose_name='起拍标志')),
                ('hammer_price', models.CharField(max_length=10, null=True, verbose_name='成交价')),
                ('hammer_price_local', models.FloatField(null=True, verbose_name='本地成交价')),
                ('hammer_price_with_symbol', models.CharField(max_length=10, null=True, verbose_name='成交价标志')),
                ('shipping_price', models.CharField(max_length=10, null=True, verbose_name='运费')),
                ('shipping_price_local', models.FloatField(null=True, verbose_name='本地运费')),
                ('shipping_price_with_symbol', models.CharField(max_length=10, null=True, verbose_name='运费标志')),
                ('alternate_title', models.TextField(null=True, verbose_name='替代商品标题')),
                ('product_brand', models.CharField(max_length=50, null=True, verbose_name='产品商标')),
                ('product_model', models.CharField(max_length=10, null=True, verbose_name='产品样式')),
                ('alert', models.CharField(max_length=100, null=True, verbose_name='通告')),
                ('hide_reminder', models.CharField(max_length=100, null=True, verbose_name='隐藏的提醒')),
                ('alerts_count', models.IntegerField(null=True, verbose_name='通告次数')),
                ('seller_name', models.CharField(max_length=50, null=True, verbose_name='卖家姓名')),
                ('seller_positive_feedback_count', models.IntegerField(null=True, verbose_name='卖方积极反馈计数')),
                ('seller_lots_sold', models.IntegerField(null=True, verbose_name='卖家总共卖出数量')),
                ('calculate_ratings_count', models.IntegerField(null=True, verbose_name='评价数量')),
                ('ratings_count_string', models.CharField(max_length=15, null=True, verbose_name='评价数量标识')),
                ('ratings_average_string', models.CharField(max_length=15, null=True, verbose_name='平均评分标识')),
                ('ratings_count', models.FloatField(null=True, verbose_name='评价数量')),
                ('ratings_average', models.FloatField(null=True, verbose_name='平均评分')),
                ('sizing_ratings', models.FloatField(null=True, verbose_name='分级评级')),
                ('recent_ratings', models.TextField(null=True, verbose_name='最近评价详情')),
                ('view_all_ratings', models.CharField(max_length=15, null=True, verbose_name='查看所有的评价')),
                ('ships_to_user_country', models.CharField(max_length=15, null=True, verbose_name='运往用户所在国')),
                ('shipping_description_local', models.CharField(max_length=100, null=True, verbose_name='快递描述')),
                ('variations', models.TextField(null=True, verbose_name='变种商品')),
                ('lot_upsells', models.TextField(null=True, verbose_name='更多销售')),
                ('generic_sections', models.TextField(null=True, verbose_name='通用部分')),
                ('analytics', models.TextField(null=True, verbose_name='分析')),
                ('note', models.CharField(max_length=15, null=True, verbose_name='记录')),
                ('buyer_prompt', models.CharField(max_length=15, null=True, verbose_name='买家提示')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='产品激活时间')),
                ('bidding_started_at', models.DateTimeField(null=True, verbose_name='起拍时间')),
                ('bidding_ended_at', models.DateTimeField(null=True, verbose_name='结束拍卖时间')),
                ('bidding_started_at_data', models.DateField(null=True, verbose_name='产品起拍日期')),
                ('activated_at_data', models.DateField(null=True, verbose_name='产品激活日期')),
                ('product_sum', models.CharField(max_length=30, null=True, verbose_name='订单数量')),
                ('buy_now_orders', models.CharField(max_length=30, null=True, verbose_name='一口价订单')),
                ('save_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建数据时间')),
                ('image_urls', models.TextField(null=True, verbose_name='所有图片')),
                ('product_video_url', models.TextField(null=True, verbose_name='视频链接')),
                ('name_your_price', models.CharField(max_length=255, null=True, verbose_name='议价字段')),
                ('order_type', models.IntegerField(blank=True, default=9, null=True, verbose_name='订单类型')),
                ('cn_user_id', models.CharField(max_length=30, null=True, verbose_name='卖家ID')),
                ('cn_seller_name', models.CharField(max_length=50, null=True, verbose_name='卖家备注名')),
            ],
        ),
    ]
